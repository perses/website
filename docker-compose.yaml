version: "3.9"

services:
  website:
    image: hugomods/hugo
    command: hugo server --watch --bind=0.0.0.0 --disableLiveReload=true --minify -environment production --baseURL https://perses.dev --appendPort=false
    restart: unless-stopped
    ports:
      - 1313:1313
    volumes:
      - ./website:/src
    labels:
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.website.rule=Host(`perses.dev`)"
      - "traefik.http.routers.website.tls.certresolver=myresolver"

  demo:
    image: "docker.io/persesdev/perses:v0.44.0-rc0-distroless"
    ports:
      - "5000:8080"
    command: "--config=/etc/perses/config/secret.yaml"
    environment:
      PERSES_DATABASE_FILE_EXTENSION: "json"
      PERSES_SECURITY_ENABLE_AUTH: true
      PERSES_SECURITY_AUTHORIZATION_GUEST_PERMISSIONS_0_ACTIONS_0: "read"
      PERSES_SECURITY_AUTHORIZATION_GUEST_PERMISSIONS_0_SCOPES_0: "*"
      PERSES_SECURITY_AUTHORIZATION_GUEST_PERMISSIONS_1_ACTIONS_0: "create"
      PERSES_SECURITY_AUTHORIZATION_GUEST_PERMISSIONS_1_SCOPES_0: "Project"
      PERSES_SECURITY_AUTHENTICATION_PROVIDERS_ENABLE_NATIVE: true
      PERSES_PROVISIONING_FOLDERS_0: "/etc/perses/provisioning"
      PERSES_IMPORTANT_DASHBOARDS_0_PROJECT: "perses"
      PERSES_IMPORTANT_DASHBOARDS_0_DASHBOARD: "NodeExporterFull"
      PERSES_INFORMATION: |-
        # Welcome to the Demo instance of Perses!

        This public demo instance is here to show you what Perses looks like
        and what's possible to do with it. You can have a look at the example
        dashboards, or create your own ones!
    volumes:
      - ./provisioning:/etc/perses/provisioning
      - ./secret:/etc/perses/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.demo.rule=Host(`demo.perses.dev`)"
      - "traefik.http.routers.demo.tls.certresolver=myresolver"

  traefik:
    image: "docker.io/traefik:v2.9.10"
    command:
      - "--providers.docker=true"
      # https://doc.traefik.io/traefik/user-guides/docker-compose/acme-tls/
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=perses-team@googlegroups.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - "/run/user/1000/podman/podman.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
